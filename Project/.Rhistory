knitr::opts_chunk$set(echo = TRUE)
glimpse(suicide)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library("naniar")
library("naniar")
library(tidyverse)
library("naniar")
getwd()
suicide <- readr::read_csv("data/master.csv")
glimpse(suicide)
View(suicide)
suicide %>%
group_by(year) %>%
summarize(suicide_number = sum(suicide_number), population = sum(population), suicide_per_100kpop = sum(suicide_per_100kpop), suicide_rate = (suicide_number)/(population)) %>%
ggplot(aes(x = year, y = suicide_number)) +
geom_point() +
geom_line(color = "red") +
labs(title = "Year vs. Suicide Number",
y = "suicide number")
suicide %>%
group_by(year) %>%
summarize(suicide_number = sum(suicide_number), population = sum(population), suicide_per_100kpop = sum(suicide_per_100kpop), suicide_rate = (suicide_number)/(population))
names(suicide) <- str_replace_all(names(suicide), c(" " = "_", "/" = "_", "-" = "_"))
suicide <-
suicide %>%
dplyr::rename(
suicide_number = suicides_no,
suicide_per_100kpop = suicides_100k_pop)
suicide$country <- as.factor(suicide$country)
suicide$age <- as.factor(suicide$age)
suicide$sex <- as.factor(suicide$sex)
suicide$country_year <- as.factor(suicide$country_year)
suicide$generation <- as.factor(suicide$generation)
glimpse(suicide)
suicide %>%
group_by(year) %>%
summarize(suicide_number = sum(suicide_number), population = sum(population), suicide_per_100kpop = sum(suicide_per_100kpop), suicide_rate = (suicide_number)/(population))
suicide %>%
group_by(year) %>%
summarize(suicide_number = sum(suicide_number), population = sum(population), suicide_per_100kpop = sum(suicide_per_100kpop), suicide_rate = (suicide_number)/(population)) %>%
ggplot(aes(x = year, y = suicide_number)) +
geom_point() +
geom_line(color = "red") +
labs(title = "Year vs. Suicide Number",
y = "suicide number")
suicide %>%
group_by(year) %>%
summarize(suicide_number = sum(suicide_number), population = sum(population), suicide_per_100kpop = sum(suicide_per_100kpop), suicide_rate = (suicide_number)/(population)) %>%
ggplot(aes(x = year, y = population)) +
geom_point() +
geom_line(color = "red") +
labs(title = "Year vs. Population",
y = "populationr")
suicide %>%
group_by(year) %>%
summarize(suicide_number = sum(suicide_number), population = sum(population), suicide_per_100kpop = sum(suicide_per_100kpop), suicide_rate = (suicide_number)/(population)) %>%
ggplot(aes(x = year, y = suicide_rate)) +
geom_point() +
geom_line(color = "red") +
labs(title = "Year vs. Suicide Rate",
y = "suicide rater")
suicide %>%
group_by(sex) %>%
summarize(num_suicide = sum(suicide_number))
suicide %>%
group_by(sex) %>%
summarize(num_suicide = sum(suicide_number)) %>%
ggplot(aes(x = sex, y = num_suicide)) +
geom_bar (stat = "identity") +
labs(title = "Sex vs. Suicide Number",
y = "suicide number")
suicide %>%
group_by(age) %>%
summarize(num_suicide = sum(suicide_number))
suicide %>%
group_by(age) %>%
summarize(num_suicide = sum(suicide_number)) %>%
ggplot(aes(x = age, y = num_suicide)) +
geom_bar (stat = "identity") +
labs(title = "Age vs. Suicide Number",
y = "suicide number")
suicide %>%
group_by(generation) %>%
summarize(num_suicide = sum(suicide_number))
suicide %>%
group_by(generation) %>%
summarize(num_suicide = sum(suicide_number)) %>%
ggplot(aes(x = generation, y = num_suicide)) +
geom_bar (stat = "identity") +
labs(title = "Generation vs. Suicide Number",
y = "suicide number")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library("naniar")
library("skimr")
getwd()
suicide <- readr::read_csv("data/master.csv")
glimpse(suicide)
suicide %>%
summarize(number_nas = sum(is.na(suicide)))
suicide %>%
purrr::map_df(~ sum(is.na(.))) %>%
pivot_longer(everything(),
names_to = "variables",
values_to = "num_nas") %>%
arrange(desc(num_nas))
naniar::miss_var_summary(suicide)
names(suicide) <- str_replace_all(names(suicide), c(" " = "_", "/" = "_", "-" = "_"))
suicide <-
suicide %>%
dplyr::rename(
suicide_number = suicides_no,
suicide_per_100kpop = suicides_100k_pop)
suicide$country <- as.factor(suicide$country)
suicide$age <- as.factor(suicide$age)
suicide$sex <- as.factor(suicide$sex)
suicide$country_year <- as.factor(suicide$country_year)
suicide$generation <- as.factor(suicide$generation)
glimpse(suicide)
suicide %>%
group_by(year) %>%
summarize(suicide_number = sum(suicide_number), population = sum(population), suicide_per_100kpop = sum(suicide_per_100kpop), suicide_rate = (suicide_number)/(population))
suicide %>%
group_by(year) %>%
summarize(suicide_number = sum(suicide_number), population = sum(population), suicide_per_100kpop = sum(suicide_per_100kpop), suicide_rate = (suicide_number)/(population)) %>%
ggplot(aes(x = year, y = suicide_number)) +
geom_point() +
geom_line(color = "red") +
labs(title = "Year vs. Suicide Number",
y = "suicide number")
suicide %>%
group_by(year) %>%
summarize(suicide_number = sum(suicide_number), population = sum(population), suicide_per_100kpop = sum(suicide_per_100kpop), suicide_rate = (suicide_number)/(population)) %>%
ggplot(aes(x = year, y = population)) +
geom_point() +
geom_line(color = "red") +
labs(title = "Year vs. Population",
y = "populationr")
suicide %>%
group_by(year) %>%
summarize(suicide_number = sum(suicide_number), population = sum(population), suicide_per_100kpop = sum(suicide_per_100kpop), suicide_rate = (suicide_number)/(population)) %>%
ggplot(aes(x = year, y = suicide_rate)) +
geom_point() +
geom_line(color = "red") +
labs(title = "Year vs. Suicide Rate",
y = "suicide rater")
suicide %>%
group_by(sex) %>%
summarize(num_suicide = sum(suicide_number))
suicide %>%
group_by(sex) %>%
summarize(num_suicide = sum(suicide_number)) %>%
ggplot(aes(x = sex, y = num_suicide)) +
geom_bar (stat = "identity") +
labs(title = "Sex vs. Suicide Number",
y = "suicide number")
suicide %>%
group_by(age) %>%
summarize(num_suicide = sum(suicide_number))
suicide %>%
group_by(age) %>%
summarize(num_suicide = sum(suicide_number)) %>%
ggplot(aes(x = age, y = num_suicide)) +
geom_bar (stat = "identity") +
labs(title = "Age vs. Suicide Number",
y = "suicide number")
suicide %>%
group_by(generation) %>%
summarize(num_suicide = sum(suicide_number))
suicide %>%
group_by(generation) %>%
summarize(num_suicide = sum(suicide_number)) %>%
ggplot(aes(x = generation, y = num_suicide)) +
geom_bar (stat = "identity") +
labs(title = "Generation vs. Suicide Number",
y = "suicide number")
View(suicide)
suicide %>%
ggplot(aes(x = `gdp_per_capita_($)`, y = suicide_per_100kpop)) +
geom_jitter () +
labs(title = "GDP Per Capita vs. Suicide Rate",
x = "GDP Per Capita",
y = "Suicide Rate")
suicide %>%
ggplot(aes(x = `gdp_per_capita_($)`, y = suicide_per_100kpop)) +
geom_jitter () +
labs(title = "GDP Per Capita vs. Suicide Per 100k Popullation",
x = "GDP Per Capita",
y = "Suicide Per 100k Population")
suicide %>%
ggplot(aes(x = `gdp_per_capita_($)`, y = suicide_per_100kpop)) +
scale_x_log10() +
geom_jitter () +
labs(title = "GDP Per Capita vs. Suicide Per 100k Popullation",
x = "GDP Per Capita",
y = "Suicide Per 100k Population")
ui <- dashboardPage(
dashboardHeader(title = "Suicide Per 100k Pop by Age Group"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
radioButtons("x", "Select Year", choices = unique(suicide$year),
selected = "2010"),
selectInput("y", "Select Country", choices = unique(suicide$country),
selected = "Albania"),
selectInput("z", "Select Sex", choices = unique(suicide$sex),
selected = "Male")
), # close the first box
box(title = "Suicide Per 100k Pop by Age Group", width = 7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
library("naniar")
library("skimr")
library("tidyverse")
library("shinydashboard")
ui <- dashboardPage(
dashboardHeader(title = "Suicide Per 100k Pop by Age Group"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
radioButtons("x", "Select Year", choices = unique(suicide$year),
selected = "2010"),
selectInput("y", "Select Country", choices = unique(suicide$country),
selected = "Albania"),
selectInput("z", "Select Sex", choices = unique(suicide$sex),
selected = "Male")
), # close the first box
box(title = "Suicide Per 100k Pop by Age Group", width = 7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
library(naniar)
library(skimr)
library(tidyverse)
library(shiny)
library(shinydashboard)
ui <- dashboardPage(
dashboardHeader(title = "Suicide Per 100k Pop by Age Group"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
radioButtons("x", "Select Year", choices = unique(suicide$year),
selected = "2010"),
selectInput("y", "Select Country", choices = unique(suicide$country),
selected = "Albania"),
selectInput("z", "Select Sex", choices = unique(suicide$sex),
selected = "Male")
), # close the first box
box(title = "Suicide Per 100k Pop by Age Group", width = 7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
suicide %>%
filter(year==input$x & country==input$y & sex==input$z) %>%
ggplot(aes(x=age, y=suicide_per_100kpop)) +
geom_col(color="black", fill="steelblue", alpha=0.75) +
theme_light(base_size = 18) +
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(x = "Age Group", y = "Suicide Per 100k Pop")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Suicide Per 100k Pop by Age Group"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Year", choices = unique(suicide$year),
selected = "2010"),
selectInput("y", "Select Country", choices = unique(suicide$country),
selected = "Albania"),
radioButtons("z", "Select Sex", choices = unique(suicide$sex),
selected = "Male")
), # close the first box
box(title = "Suicide Per 100k Pop by Age Group", width = 7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
suicide %>%
filter(year==input$x & country==input$y & sex==input$z) %>%
ggplot(aes(x=age, y=suicide_per_100kpop)) +
geom_col(color="black", fill="steelblue", alpha=0.75) +
theme_light(base_size = 18) +
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(x = "Age Group", y = "Suicide Per 100k Pop")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Suicide Per 100k Pop by Age Group"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Year", choices = unique(suicide$year),
selected = "2010"),
selectInput("y", "Select Country", choices = unique(suicide$country),
selected = "Albania"),
radioButtons("z", "Select Sex", choices = unique(suicide$sex),
selected = "Male")
), # close the first box
box(title = "Suicide Per 100k Pop by Age Group", width = 7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
suicide %>%
filter(year==input$x & country==input$y & sex==input$z) %>%
ggplot(aes(x=age, y=suicide_per_100kpop)) +
geom_col(color="black", fill="steelblue", alpha=0.75) +
theme_light(base_size = 18) +
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(x = "Age Group", y = "Suicide Per 100k Pop")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Suicide Per 100k Pop by Age Group"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Year", choices = unique(suicide$year),
selected = "2010"),
selectInput("y", "Select Country", choices = unique(suicide$country),
selected = "Albania"),
radioButtons("z", "Select Sex", choices = unique(suicide$sex),
selected = "Male")
), # close the first box
box(title = "Suicide Per 100k Pop by Age Group", width = 7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
suicide %>%
filter(year==input$x & country==input$y & sex==input$z) %>%
ggplot(aes(x=age, y=suicide_per_100kpop)) +
geom_col(color="black", fill="steelblue", alpha=0.75) +
theme_light(base_size = 18) +
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(x = "Age Group", y = "Suicide Per 100k Pop")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Suicide Per 100k Pop by Age Group"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Year", choices = unique(suicide$year),
selected = "2010"),
selectInput("y", "Select Country", choices = unique(suicide$country),
selected = "Albania"),
selectInput("z", "Select Sex", choices = unique(suicide$sex),
selected = "Male")
), # close the first box
box(title = "Suicide Per 100k Pop by Age Group", width = 7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
suicide %>%
filter(year==input$x & country==input$y & sex==input$z) %>%
ggplot(aes(x=age, y=suicide_per_100kpop)) +
geom_col(color="black", fill="steelblue", alpha=0.75) +
theme_light(base_size = 18) +
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(x = "Age Group", y = "Suicide Per 100k Pop")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
